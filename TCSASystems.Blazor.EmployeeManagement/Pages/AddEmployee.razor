@page "/add-employee"
@using TCSASystems.Blazor.EmployeeManagement.Models;
@using TCSASystems.Blazor.EmployeeManagement.Services;
@using TCSASystems.Blazor.EmployeeManagement.Models.DTOs

<Card>
    <div class="row user-detail-row">
        <h3>Add New Employee</h3>
        <div class="form-group">
            <EditForm Model="@addEmployeeForm" OnValidSubmit="AddNewEmployee">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <p>
                    <div class="form-floating mb-3">
                        <InputText class="form-control" id="floatingInput" placeholder="Name here" @bind-Value="addEmployeeForm.Name" />
                        <label for="floatingInput">Name</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputNumber class="form-control" id="floatingInput" placeholder="Salary here" @bind-Value="addEmployeeForm.Salary" />
                        <label for="floatingInput">Salary</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputSelect shadow rounded id="floatingInput" placeholder="Employee here" @bind-Value="addEmployeeForm.Type" class="form-select">
                            @foreach (EmployeeType type in Enum.GetValues(typeof(EmployeeType)))
                            {
                                <option value="@type">@type.GetDisplayName()</option>
                            }
                        </InputSelect>
                        <label for="floatingInput">Employment Type</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputSelect shadow rounded id="floatingInput" placeholder="Position here" @bind-Value="addEmployeeForm.Position" class="form-select">
                            @foreach (Position position in Enum.GetValues(typeof(Position)))
                            {
                                <option value="@position">@position.GetDisplayName()</option>
                            }
                        </InputSelect>
                        <label for="floatingInput">Position</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText class="form-control" id="floatingInput" placeholder="Img here" @bind-Value="addEmployeeForm.ImgUrl" />
                        <label for="floatingInput">Image Url</label>
                    </div>
                </p>
                <button class="btn btn-outline-secondary" type="submit">Submit</button>
            </EditForm>
        </div>
    </div>
</Card>

@code {
    [Inject] private IEmployeeService EmployeeService { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }

    private AddEmployeeForm addEmployeeForm = new();

    private async Task AddNewEmployee()
    {
        var response = await EmployeeService.AddEmployee(addEmployeeForm);
        NavigationManager.NavigateTo($"/");
    }
}
